{"ast":null,"code":"var _jsxFileName = \"/Users/arjunaggarwal/Desktop/my-app/src/App.js\";\nimport logo from \"./logo.svg\";\nimport React, { Component } from \"react\";\nimport { connect } from 'react-redux';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport class App extends React.Component {\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"\\\"This is my first Redux App\\\"\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: this.props.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.props.buttonClick\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 7\n    }, this);\n  }\n\n} // this is used to retrieve the store state\n\nfunction mapStateToProps(state) {\n  return {\n    message: state.message\n  };\n}\n\nconst fetchTweets = () => {\n  return function (dispatch) {\n    dispatch(fetchTweetsRequest());\n    axios.get('https://api.twitter.com/1.1/trends/place.json?id=1').then(response => {\n      // response.data is an array of trending tweets\n      const tweets = response.data; //dispatch(fetchTweetsSuccess(tweets))\n    }).catch(error => {// error.message is the error description\n      //dispatch(fetchTweetsFailure(error.message))\n    });\n  };\n}; // this is used to retrieve the actions and dispatch them to the store\n\n\nconst mapDispatchToProps = dispatch => {\n  return {\n    buttonClick: () => {\n      fetchTweets;\n    }\n  };\n}; // Adding mapStateToProps and mapDispatchToProps into connect function\n\n\nconst AppContainer = connect(mapStateToProps, mapDispatchToProps)(App);\nexport default AppContainer;","map":{"version":3,"sources":["/Users/arjunaggarwal/Desktop/my-app/src/App.js"],"names":["React","Component","connect","App","render","props","message","buttonClick","mapStateToProps","state","fetchTweets","dispatch","fetchTweetsRequest","axios","get","then","response","tweets","data","catch","error","mapDispatchToProps","AppContainer"],"mappings":";;AACA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,aAAxB;AACA,OAAO,WAAP;;AAEA,OAAO,MAAMC,GAAN,SAAkBH,KAAK,CAACC,SAAxB,CAAkC;AACvCG,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA,kBACG,KAAKC,KAAL,CAAWC;AADd;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE;AAAQ,QAAA,OAAO,EAAE,KAAKD,KAAL,CAAWE;AAA5B;AAAA;AAAA;AAAA;AAAA,cAPF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAWD;;AAbsC,C,CAmBzC;;AACA,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAC9B,SAAO;AAAEH,IAAAA,OAAO,EAAEG,KAAK,CAACH;AAAjB,GAAP;AACD;;AAED,MAAMI,WAAW,GAAG,MAAM;AACxB,SAAO,UAASC,QAAT,EAAmB;AACxBA,IAAAA,QAAQ,CAACC,kBAAkB,EAAnB,CAAR;AACAC,IAAAA,KAAK,CAACC,GAAN,CAAU,oDAAV,EACCC,IADD,CACMC,QAAQ,IAAI;AAChB;AACA,YAAMC,MAAM,GAAGD,QAAQ,CAACE,IAAxB,CAFgB,CAGhB;AACD,KALD,EAMCC,KAND,CAMOC,KAAK,IAAI,CACd;AACA;AACD,KATD;AAUD,GAZD;AAaD,CAdD,C,CAgBA;;;AACA,MAAMC,kBAAkB,GAAIV,QAAD,IAAc;AACvC,SAAO;AACLJ,IAAAA,WAAW,EAAE,MAAM;AACnBG,MAAAA,WAAW;AACV;AAHI,GAAP;AAKD,CAND,C,CAQA;;;AACA,MAAMY,YAAY,GAAGpB,OAAO,CAC1BM,eAD0B,EAE1Ba,kBAF0B,CAAP,CAGnBlB,GAHmB,CAArB;AAKA,eAAemB,YAAf","sourcesContent":["import logo from './logo.svg';\nimport React, { Component } from \"react\"\nimport { connect } from 'react-redux'\nimport './App.css';\n\nexport class App extends React.Component {\n  render() {\n    return(\n      <div>\n        <h1>\n          \"This is my first Redux App\"\n        </h1>\n        <h3>\n          {this.props.message}\n        </h3>\n        <button onClick={this.props.buttonClick}/>\n      </div>\n    )\n  }\n}\n\n\n\n\n// this is used to retrieve the store state\nfunction mapStateToProps(state) {\n  return { message: state.message }\n}\n\nconst fetchTweets = () => {\n  return function(dispatch) {\n    dispatch(fetchTweetsRequest())\n    axios.get('https://api.twitter.com/1.1/trends/place.json?id=1')\n    .then(response => {\n      // response.data is an array of trending tweets\n      const tweets = response.data\n      //dispatch(fetchTweetsSuccess(tweets))\n    })\n    .catch(error => {\n      // error.message is the error description\n      //dispatch(fetchTweetsFailure(error.message))\n    })\n  }\n}\n\n// this is used to retrieve the actions and dispatch them to the store\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    buttonClick: () => {\n    fetchTweets\n    }\n  }\n}\n\n// Adding mapStateToProps and mapDispatchToProps into connect function\nconst AppContainer = connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(App);\n\nexport default AppContainer;"]},"metadata":{},"sourceType":"module"}