{"ast":null,"code":"import thunk from \"redux-thunk\";\nconst initialState = {\n  loading: false,\n  tweets: [],\n  error: ''\n};\nconst applyMiddleware = redux.applyMiddleware;\n\nconst thunkMiddleWare = require('redux-thunk').default;\n\nconst axios = require('axios');\n\nconst reducer = (state = initialState, action) => {\n  if (action.type == \"FETCH_TWEETS_REQUEST\") {\n    return { ...state,\n      loading: true,\n      tweets: []\n    };\n  }\n\n  if (action.type == \"FETCH_TWEETS_SUCCESS\") {\n    return {\n      loading: false,\n      tweets: action.payload,\n      error: ''\n    };\n  }\n\n  if (action.type == \"FETCH_TWEETS_FAILURE\") {\n    return {\n      loading: false,\n      tweets: [],\n      error: action.payload\n    };\n  }\n};\n\nexport default reducer;","map":{"version":3,"sources":["/Users/arjunaggarwal/Desktop/my-app/src/reducers.js"],"names":["thunk","initialState","loading","tweets","error","applyMiddleware","redux","thunkMiddleWare","require","default","axios","reducer","state","action","type","payload"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,aAAlB;AAEA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,OAAO,EAAE,KADQ;AAEjBC,EAAAA,MAAM,EAAC,EAFU;AAGjBC,EAAAA,KAAK,EAAE;AAHU,CAArB;AAMA,MAAMC,eAAe,GAAGC,KAAK,CAACD,eAA9B;;AAEA,MAAME,eAAe,GAAGC,OAAO,CAAC,aAAD,CAAP,CAAuBC,OAA/C;;AAEA,MAAMC,KAAK,GAAGF,OAAO,CAAC,OAAD,CAArB;;AAEA,MAAMG,OAAO,GAAG,CAACC,KAAK,GAACX,YAAP,EAAqBY,MAArB,KAAgC;AAC5C,MAAGA,MAAM,CAACC,IAAP,IAAe,sBAAlB,EAA0C;AACtC,WAAO,EACH,GAAGF,KADA;AAEHV,MAAAA,OAAO,EAAE,IAFN;AAGHC,MAAAA,MAAM,EAAC;AAHJ,KAAP;AAKH;;AAED,MAAGU,MAAM,CAACC,IAAP,IAAe,sBAAlB,EAA0C;AACtC,WAAO;AACHZ,MAAAA,OAAO,EAAE,KADN;AAEHC,MAAAA,MAAM,EAAEU,MAAM,CAACE,OAFZ;AAGHX,MAAAA,KAAK,EAAE;AAHJ,KAAP;AAKH;;AAED,MAAGS,MAAM,CAACC,IAAP,IAAe,sBAAlB,EAA0C;AACtC,WAAO;AACHZ,MAAAA,OAAO,EAAE,KADN;AAEHC,MAAAA,MAAM,EAAC,EAFJ;AAGHC,MAAAA,KAAK,EAAES,MAAM,CAACE;AAHX,KAAP;AAKH;AAIJ,CA3BD;;AA6BA,eAAeJ,OAAf","sourcesContent":["import thunk from \"redux-thunk\"\n\nconst initialState = {\n    loading: false,\n    tweets:[],\n    error: ''\n}\n\nconst applyMiddleware = redux.applyMiddleware\n\nconst thunkMiddleWare = require('redux-thunk').default\n\nconst axios = require('axios')\n\nconst reducer = (state=initialState, action) => {\n    if(action.type == \"FETCH_TWEETS_REQUEST\") {\n        return {\n            ...state,\n            loading: true,\n            tweets:[]\n        }\n    }\n\n    if(action.type == \"FETCH_TWEETS_SUCCESS\") {\n        return {\n            loading: false,\n            tweets: action.payload,\n            error: ''\n        }\n    }\n\n    if(action.type == \"FETCH_TWEETS_FAILURE\") {\n        return {\n            loading: false,\n            tweets:[],\n            error: action.payload\n        }\n    }\n\n\n\n}\n\nexport default reducer"]},"metadata":{},"sourceType":"module"}